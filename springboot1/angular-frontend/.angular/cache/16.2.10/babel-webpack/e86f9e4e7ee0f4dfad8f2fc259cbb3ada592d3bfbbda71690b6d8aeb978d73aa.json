{"ast":null,"code":"import { Employee } from '../employee';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../employee.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class UpdateEmployeeComponent {\n  constructor(employeeService, route, router) {\n    this.employeeService = employeeService;\n    this.route = route;\n    this.router = router;\n    this.employee = new Employee();\n  }\n  ngOnInit() {\n    this.id = this.route.snapshot.params['id'];\n    this.employeeService.getEmployeeById(this.id).subscribe(data => {\n      this.employee = data;\n    }, error => console.log(error));\n  }\n  onSubmit() {\n    this.employeeService.updateEmployee(this.id, this.employee).subscribe(data => {\n      this.goToEmployeeList();\n    }, error => console.log(error));\n  }\n  goToEmployeeList() {\n    this.router.navigate(['/employees']);\n  }\n  static #_ = this.ɵfac = function UpdateEmployeeComponent_Factory(t) {\n    return new (t || UpdateEmployeeComponent)(i0.ɵɵdirectiveInject(i1.EmployeeService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdateEmployeeComponent,\n    selectors: [[\"app-update-employee\"]],\n    decls: 23,\n    vars: 3,\n    consts: [[1, \"row\"], [1, \"card\", \"col-md-6\", \"offset-md-3\", \"offset-md-3\"], [1, \"text-center\"], [1, \"card-body\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"text\", \"id\", \"firstName\", \"name\", \"firstName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"lastName\", \"name\", \"lastName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"emailId\", \"name\", \"emailId\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"]],\n    template: function UpdateEmployeeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 0)(3, \"h3\", 2);\n        i0.ɵɵtext(4, \" Update Employee \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"hr\");\n        i0.ɵɵelementStart(6, \"div\", 3)(7, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function UpdateEmployeeComponent_Template_form_ngSubmit_7_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(8, \"div\", 5)(9, \"label\");\n        i0.ɵɵtext(10, \" First Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateEmployeeComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.employee.firstName = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 5)(13, \"label\");\n        i0.ɵɵtext(14, \" Last Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateEmployeeComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.employee.lastName = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 5)(17, \"label\");\n        i0.ɵɵtext(18, \" Email Id\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateEmployeeComponent_Template_input_ngModelChange_19_listener($event) {\n          return ctx.employee.emailId = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(20, \"br\");\n        i0.ɵɵelementStart(21, \"button\", 9);\n        i0.ɵɵtext(22, \"Submit\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngModel\", ctx.employee.firstName);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.employee.lastName);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.employee.emailId);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Employee","UpdateEmployeeComponent","constructor","employeeService","route","router","employee","ngOnInit","id","snapshot","params","getEmployeeById","subscribe","data","error","console","log","onSubmit","updateEmployee","goToEmployeeList","navigate","_","i0","ɵɵdirectiveInject","i1","EmployeeService","i2","ActivatedRoute","Router","_2","selectors","decls","vars","consts","template","UpdateEmployeeComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","UpdateEmployeeComponent_Template_form_ngSubmit_7_listener","UpdateEmployeeComponent_Template_input_ngModelChange_11_listener","$event","firstName","UpdateEmployeeComponent_Template_input_ngModelChange_15_listener","lastName","UpdateEmployeeComponent_Template_input_ngModelChange_19_listener","emailId","ɵɵadvance","ɵɵproperty"],"sources":["C:\\dev\\git-hub\\Grud2\\springboot1\\angular-frontend\\src\\app\\update-employee\\update-employee.component.ts","C:\\dev\\git-hub\\Grud2\\springboot1\\angular-frontend\\src\\app\\update-employee\\update-employee.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { EmployeeService } from '../employee.service';\r\nimport { Employee } from '../employee';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-update-employee',\r\n  templateUrl: './update-employee.component.html',\r\n  styleUrls: ['./update-employee.component.css']\r\n})\r\nexport class UpdateEmployeeComponent implements OnInit {\r\n\r\n  id!: number;\r\n  employee: Employee = new Employee();\r\n  constructor(private employeeService: EmployeeService,\r\n    private route: ActivatedRoute,\r\n    private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.id = this.route.snapshot.params['id'];\r\n\r\n    this.employeeService.getEmployeeById(this.id).subscribe(data => {\r\n      this.employee = data;\r\n    }, error => console.log(error));\r\n  }\r\n\r\n  onSubmit(){\r\n    this.employeeService.updateEmployee(this.id, this.employee).subscribe( data =>{\r\n      this.goToEmployeeList();\r\n    }\r\n    , error => console.log(error));\r\n  }\r\n\r\n  goToEmployeeList(){\r\n    this.router.navigate(['/employees']);\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"card col-md-6 offset-md-3 offset-md-3\">\r\n        <div class=\"row\">\r\n            <h3 class=\"text-center\"> Update Employee </h3>\r\n            <hr />\r\n            <div class=\"card-body\">\r\n                <form (ngSubmit)=\"onSubmit()\">\r\n\r\n                    <div class=\"form-group\">\r\n                        <label> First Name</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"firstName\" [(ngModel)]=\"employee.firstName\"\r\n                            name=\"firstName\">\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <label> Last Name</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"lastName\" [(ngModel)]=\"employee.lastName\"\r\n                            name=\"lastName\">\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <label> Email Id</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"emailId\" [(ngModel)]=\"employee.emailId\"\r\n                            name=\"emailId\">\r\n                    </div>\r\n                    <br />\r\n                    <button class=\"btn btn-success\" type=\"submit\">Submit</button>\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}